$date
	Fri Jun 13 06:08:31 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 # pc_src $end
$var wire 1 " reset $end
$var wire 5 $ rs2 [4:0] $end
$var wire 5 % rs1 [4:0] $end
$var wire 1 & reg_write $end
$var wire 32 ' rd2 [31:0] $end
$var wire 32 ( rd1 [31:0] $end
$var wire 5 ) rd [4:0] $end
$var wire 7 * opcode [6:0] $end
$var wire 2 + mem_write_type [1:0] $end
$var wire 1 , mem_write $end
$var wire 1 - mem_to_reg $end
$var wire 1 . mem_read $end
$var wire 2 / mem_data_type [1:0] $end
$var wire 32 0 mem_data_out [31:0] $end
$var wire 32 1 instr [31:0] $end
$var wire 32 2 imm [31:0] $end
$var wire 7 3 funct7 [6:0] $end
$var wire 3 4 funct3 [2:0] $end
$var wire 32 5 branch_target [31:0] $end
$var wire 1 6 branch_taken $end
$var wire 1 7 branch $end
$var wire 1 8 alu_src $end
$var wire 32 9 alu_out_standard [31:0] $end
$var wire 32 : alu_out_mext [31:0] $end
$var wire 32 ; alu_out [31:0] $end
$var wire 2 < alu_op [1:0] $end
$var wire 32 = alu_input_b [31:0] $end
$var wire 5 > alu_control [4:0] $end
$var wire 32 ? WB_result [31:0] $end
$var wire 32 @ PC_next [31:0] $end
$var wire 32 A PC [31:0] $end
$var reg 32 B EX_MEM_alu_out [31:0] $end
$var reg 3 C EX_MEM_funct3 [2:0] $end
$var reg 1 D EX_MEM_mem_read $end
$var reg 1 E EX_MEM_mem_to_reg $end
$var reg 1 F EX_MEM_mem_write $end
$var reg 5 G EX_MEM_rd [4:0] $end
$var reg 32 H EX_MEM_rd2 [31:0] $end
$var reg 1 I EX_MEM_reg_write $end
$var reg 32 J ID_EX_PC [31:0] $end
$var reg 2 K ID_EX_alu_op [1:0] $end
$var reg 1 L ID_EX_alu_src $end
$var reg 1 M ID_EX_branch $end
$var reg 3 N ID_EX_funct3 [2:0] $end
$var reg 7 O ID_EX_funct7 [6:0] $end
$var reg 32 P ID_EX_imm [31:0] $end
$var reg 1 Q ID_EX_mem_read $end
$var reg 1 R ID_EX_mem_to_reg $end
$var reg 1 S ID_EX_mem_write $end
$var reg 5 T ID_EX_rd [4:0] $end
$var reg 32 U ID_EX_rd1 [31:0] $end
$var reg 32 V ID_EX_rd2 [31:0] $end
$var reg 1 W ID_EX_reg_write $end
$var reg 32 X IF_ID_PC [31:0] $end
$var reg 32 Y IF_ID_instr [31:0] $end
$var reg 32 Z MEM_WB_alu_out [31:0] $end
$var reg 32 [ MEM_WB_mem_data [31:0] $end
$var reg 1 \ MEM_WB_mem_to_reg $end
$var reg 5 ] MEM_WB_rd [4:0] $end
$var reg 1 ^ MEM_WB_reg_write $end
$scope module alu_core $end
$var wire 32 _ data1 [31:0] $end
$var wire 32 ` data2 [31:0] $end
$var wire 5 a alu_control [4:0] $end
$var reg 32 b result [31:0] $end
$upscope $end
$scope module alu_cu $end
$var wire 2 c alu_op [1:0] $end
$var wire 3 d funct3 [2:0] $end
$var wire 7 e funct7 [6:0] $end
$var reg 5 f alu_control [4:0] $end
$upscope $end
$scope module alu_mext_core $end
$var wire 5 g alu_control [4:0] $end
$var wire 32 h data1 [31:0] $end
$var wire 32 i data2 [31:0] $end
$var wire 64 j mul_unsigned [63:0] $end
$var wire 64 k mul_signed_unsigned [63:0] $end
$var wire 64 l mul_signed [63:0] $end
$var reg 32 m result [31:0] $end
$upscope $end
$scope module branch_cmp $end
$var wire 3 n funct3 [2:0] $end
$var wire 32 o reg1 [31:0] $end
$var wire 32 p reg2 [31:0] $end
$var reg 1 6 branch_taken $end
$upscope $end
$scope module cu $end
$var wire 7 q opcode [6:0] $end
$var reg 2 r alu_op [1:0] $end
$var reg 1 8 alu_src $end
$var reg 1 7 branch $end
$var reg 1 . mem_read $end
$var reg 1 - mem_to_reg $end
$var reg 1 , mem_write $end
$var reg 1 & reg_write $end
$upscope $end
$scope module dmem $end
$var wire 32 s addr [31:0] $end
$var wire 32 t address [31:0] $end
$var wire 1 ! clk $end
$var wire 2 u data [1:0] $end
$var wire 32 v data_in [31:0] $end
$var wire 2 w write [1:0] $end
$var reg 32 x data_out [31:0] $end
$upscope $end
$scope module imem $end
$var wire 32 y instr [31:0] $end
$var wire 32 z addr [31:0] $end
$upscope $end
$scope module imm_gen $end
$var wire 32 { instr [31:0] $end
$var wire 7 | opcode [6:0] $end
$var reg 32 } imm_out [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ! clk $end
$var wire 32 ~ next_pc [31:0] $end
$var wire 1 !" pc_write $end
$var wire 1 " reset $end
$var reg 32 "" pc_out [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ! clk $end
$var wire 5 #" rd_addr [4:0] $end
$var wire 32 $" rd_data [31:0] $end
$var wire 5 %" rs1_addr [4:0] $end
$var wire 5 &" rs2_addr [4:0] $end
$var wire 1 ^ we $end
$var wire 32 '" rs2_data [31:0] $end
$var wire 32 (" rs1_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
b0 ""
1!"
bx ~
bx }
bx |
bx {
b0 z
b1100000010000000100011 y
bx x
bx w
bx v
bx u
bx t
b0xxxxxxxxxx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
x^
bx ]
x\
bx [
bx Z
bx Y
bx X
xW
bx V
bx U
bx T
xS
xR
xQ
bx P
bx O
bx N
xM
xL
bx K
bx J
xI
bx H
bx G
xF
xE
xD
bx C
bx B
b0 A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
x6
bx 5
bx 4
bx 3
bx 2
b1100000010000000100011 1
bx 0
bx /
x.
x-
x,
bx +
bx *
bx )
bx (
bx '
x&
bx %
bx $
x#
1"
0!
$end
#5000
b0 (
b0 ("
07
b0 <
b0 r
18
0-
1,
0.
0&
b0 %
b0 %"
b11 $
b11 &"
b0 )
b100011 *
b100011 q
b10 4
b0 3
b0 2
b0 }
b100011 |
b1100000010000000100011 Y
b1100000010000000100011 {
b0 X
1!
#10000
0!
#15000
b0 ;
b0 :
b0 m
0#
b0 >
b0 a
b0 f
b0 g
b0 l
b0 k
b0 j
b0 =
b0 `
b0 i
b100 @
b100 ~
b0 9
b0 b
06
0M
b0 K
b0 c
1L
0R
1S
0Q
0W
b0 O
b0 e
b10 N
b10 d
b10 n
b0 T
b0 5
b0 P
b0 U
b0 _
b0 h
b0 o
b0 J
1!
#20000
0!
0"
#25000
b10 +
b10 w
b10 /
b10 u
b0 s
b10001010000011 1
b10001010000011 y
b1000 @
b1000 ~
0E
1F
0D
0I
b10 C
b0 G
b0 B
b0 t
b100 A
b100 z
b100 ""
1!
#30000
0!
#35000
b0 '
b0 '"
1-
1.
1&
18
0,
b0 ?
b0 $"
b0 $
b0 &"
b101 )
b11 *
b11 q
b11 |
b10011 1
b10011 y
b1100 @
b1100 ~
0\
0^
b0 ]
b0 #"
b0 Z
b10001010000011 Y
b10001010000011 {
b100 X
b1000 A
b1000 z
b1000 ""
1!
#40000
0!
#45000
b11 <
b11 r
18
0-
0.
1&
b0 )
b10011 *
b10011 q
b0 4
b10011 |
b10000 @
b10000 ~
b10011 Y
b10011 {
b1000 X
1R
0S
1Q
1W
b101 T
b0 V
b0 p
b100 5
b100 J
b1100 A
b1100 z
b1100 ""
1!
#50000
0!
#55000
b0 +
b0 w
16
b11000000000001010010011 1
b11000000000001010010011 y
b10100 @
b10100 ~
1E
0F
1D
1I
b101 G
b0 H
b0 v
b11 K
b11 c
0R
0Q
b0 N
b0 d
b0 n
b0 T
b1000 5
b1000 J
b1100 X
b10000 A
b10000 z
b10000 ""
1!
#60000
0!
#65000
bx '
bx '"
b110 $
b110 &"
b101 )
b110 2
b110 }
b0 /
b0 u
bx ?
bx $"
b1100000000001100010011 1
b1100000000001100010011 y
b11000 @
b11000 ~
b11000000000001010010011 Y
b11000000000001010010011 {
b10000 X
b1100 5
b1100 J
0E
0D
b0 C
b0 G
1\
1^
b101 ]
b101 #"
b10100 A
b10100 z
b10100 ""
1!
#70000
0!
#75000
b110 ;
b110 9
b110 b
b0 ?
b0 $"
b110 =
b110 `
b110 i
x6
b11 $
b11 &"
b110 )
b11 2
b11 }
b1000000011000101011001110110011 1
b1000000011000101011001110110011 y
b11100 @
b11100 ~
0\
b0 ]
b0 #"
b101 T
b110 P
bx V
bx p
b10110 5
b10000 J
b1100000000001100010011 Y
b1100000000001100010011 {
b10100 X
b11000 A
b11000 z
b11000 ""
1!
#80000
0!
#85000
b11 ;
bx (
bx ("
b10 <
b10 r
08
1&
b11 9
b11 b
b101 %
b101 %"
b110 $
b110 &"
b111 )
b110011 *
b110011 q
b11 4
b100000 3
b0 2
b0 }
b110011 |
b11 =
b11 `
b11 i
b110 s
b1000000011000101100001110110011 1
b1000000011000101100001110110011 y
b100000 @
b100000 ~
b1000000011000101011001110110011 Y
b1000000011000101011001110110011 {
b11000 X
b110 T
b11 P
b10111 5
b10100 J
b101 G
bx H
bx v
b110 B
b110 t
b11100 A
b11100 z
b11100 ""
1!
#90000
0!
#95000
bx ;
b110 ?
b110 $"
b11 s
bx =
bx `
bx i
bx 9
bx b
06
b100 4
b10011 1
b10011 y
b100100 @
b100100 ~
b101 ]
b101 #"
b110 Z
b110 G
b11 B
b11 t
b10 K
b10 c
0L
b100000 O
b100000 e
b11 N
b11 d
b11 n
b111 T
b0 P
bx l
bx k
bx j
bx U
bx _
bx h
bx o
b11000 5
b11000 J
b1000000011000101100001110110011 Y
b1000000011000101100001110110011 {
b11100 X
b100000 A
b100000 z
b100000 ""
1!
#100000
0!
#105000
b0 '
b0 '"
18
b11 <
b11 r
1&
b0 (
b0 ("
b0 %
b0 %"
b0 $
b0 &"
b0 )
b10011 *
b10011 q
b0 4
b0 3
b10011 |
x6
b11 /
b11 u
b0xxxxxxxxxx s
b11 ?
b11 $"
b101000 @
b101000 ~
b10011 Y
b10011 {
b100000 X
b100 N
b100 d
b100 n
b11100 5
b11100 J
b11 C
b111 G
bx B
bx t
b110 ]
b110 #"
b11 Z
b100100 A
b100100 z
b100100 ""
1!
#110000
0!
#115000
b0 ;
b0 9
b0 b
bx ?
bx $"
b0 /
b0 u
b0 l
b0 k
b0 j
b0 =
b0 `
b0 i
16
b101100000000001010010011 1
b101100000000001010010011 y
b101100 @
b101100 ~
b111 ]
b111 #"
bx Z
b100 C
b11 K
b11 c
1L
b0 O
b0 e
b0 N
b0 d
b0 n
b0 T
b0 V
b0 p
b0 U
b0 _
b0 h
b0 o
b100000 5
b100000 J
b100100 X
b101000 A
b101000 z
b101000 ""
1!
#120000
0!
#125000
bx '
bx '"
b1011 $
b1011 &"
b101 )
b1011 2
b1011 }
b0 s
b11100000000001100010011 1
b11100000000001100010011 y
b110000 @
b110000 ~
b101100000000001010010011 Y
b101100000000001010010011 {
b101000 X
b100100 5
b100100 J
b0 C
b0 G
b0 H
b0 v
b0 B
b0 t
b101100 A
b101100 z
b101100 ""
1!
#130000
0!
#135000
b1011 ;
b1011 9
b1011 b
b0 ?
b0 $"
b1011 =
b1011 `
b1011 i
x6
b111 $
b111 &"
b110 )
b111 2
b111 }
b10110000101011001110110011 1
b10110000101011001110110011 y
b110100 @
b110100 ~
b0 ]
b0 #"
b0 Z
b101 T
b1011 P
bx V
bx p
b110011 5
b101000 J
b11100000000001100010011 Y
b11100000000001100010011 {
b101100 X
b110000 A
b110000 z
b110000 ""
1!
#140000
0!
#145000
b111 ;
b110 (
b110 ("
b10 <
b10 r
08
1&
b111 9
b111 b
b101 %
b101 %"
b1100 $
b1100 &"
b111 )
b110011 *
b110011 q
b11 4
b1 3
b0 2
b0 }
b110011 |
b111 =
b111 `
b111 i
b1011 s
b10110000101100001110110011 1
b10110000101100001110110011 y
b111000 @
b111000 ~
b10110000101011001110110011 Y
b10110000101011001110110011 {
b110000 X
b110 T
b111 P
b110011 5
b101100 J
b101 G
bx H
bx v
b1011 B
b1011 t
b110100 A
b110100 z
b110100 ""
1!
#150000
0!
#155000
bx :
bx m
bx ;
b1011 ?
b1011 $"
b111 s
b1011 >
b1011 a
b1011 f
b1011 g
bx =
bx `
bx i
b0 9
b0 b
06
b100 4
b10110000101101001110110011 1
b10110000101101001110110011 y
b111100 @
b111100 ~
b101 ]
b101 #"
b1011 Z
b110 G
b111 B
b111 t
b10 K
b10 c
0L
b1 O
b1 e
b11 N
b11 d
b11 n
b111 T
b0 P
bx l
bx k
bx j
b110 U
b110 _
b110 h
b110 o
b110000 5
b110000 J
b10110000101100001110110011 Y
b10110000101100001110110011 {
b110100 X
b111000 A
b111000 z
b111000 ""
1!
#160000
0!
#165000
b0 ;
b0 :
b0 m
b1011 (
b1011 ("
b101 4
b1100 >
b1100 a
b1100 f
b1100 g
x6
b11 /
b11 u
b0xxxxxxxxxx s
b111 ?
b111 $"
bx 1
bx y
b1000000 @
b1000000 ~
b10110000101101001110110011 Y
b10110000101101001110110011 {
b111000 X
b100 N
b100 d
b100 n
b110100 5
b110100 J
b11 C
b111 G
bx B
bx t
b110 ]
b110 #"
b111 Z
b111100 A
b111100 z
b111100 ""
1!
#170000
0!
#175000
bx (
bx ("
b0 <
b0 r
0&
bx ?
bx $"
b0 /
b0 u
b0 s
b1101 >
b1101 a
b1101 f
b1101 g
bx %
bx %"
bx $
bx &"
bx )
bx *
bx q
bx 4
bx 3
bx |
b1000100 @
b1000100 ~
b111 ]
b111 #"
bx Z
b100 C
b0 B
b0 t
b101 N
b101 d
b101 n
b1011 U
b1011 _
b1011 h
b1011 o
b111000 5
b111000 J
bx Y
bx {
b111100 X
b1000000 A
b1000000 z
b1000000 ""
1!
#180000
0!
#185000
bx ;
bx 9
bx b
b0 >
b0 a
b0 f
b0 g
06
b1 /
b1 u
b0 ?
b0 $"
b1001000 @
b1001000 ~
b1000000 X
b0 K
b0 c
0W
bx O
bx e
bx N
bx d
bx n
bx T
bx U
bx _
bx h
bx o
b111100 5
b111100 J
b101 C
b0 Z
b1000100 A
b1000100 z
b1000100 ""
1!
#190000
0!
#195000
bx /
bx u
b0xxxxxxxxxx s
b1001100 @
b1001100 ~
0I
bx C
bx G
bx B
bx t
b1000000 5
b1000000 J
b1000100 X
b1001000 A
b1001000 z
b1001000 ""
1!
#200000
0!
#205000
bx ?
bx $"
b1010000 @
b1010000 ~
b1001000 X
b1000100 5
b1000100 J
0^
bx ]
bx #"
bx Z
b1001100 A
b1001100 z
b1001100 ""
1!
#210000
0!
#215000
b1010100 @
b1010100 ~
b1001000 5
b1001000 J
b1001100 X
b1010000 A
b1010000 z
b1010000 ""
1!
#220000
0!
